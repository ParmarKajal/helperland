@model IEnumerable<Helperland_Project.ViewModels.UpcomingViewModel>
@{
    Layout = null;
}

<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css" integrity="sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.2/css/bootstrap.css">
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.3/css/dataTables.bootstrap5.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/responsive/2.2.9/css/responsive.bootstrap5.min.css">
    <link href="~/css/CustomerDashboard.css" rel="stylesheet" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@500&display=swap" rel="stylesheet">
</head>
<style>
    span.stars, span.stars span {
        display: block;
        background: url(../image/star1.png) 0 -16px repeat-x;
        width: 170px;
        height: 16px;
    }

        span.stars span {
            background-position: 0 0;
        }
</style>

<table class="table upcoming-table exams" style="width: 100%;">


    <tbody>
        @foreach (var item in Model)
        {
            DateTime dt = item.servicerequest.ServiceStartDate;               //Gets the current date
            string datetime = dt.ToString();          //converts the datetime value to string
            string[] DateTime = datetime.Split(' ');  //splitting the date from time with the help of space delimeter
            string Date = DateTime[0];                //saving the date value from the string array
            string Time = DateTime[1];
            string[] time = Time.Split(':');
            string clocktime = time[0] + ":" + time[1];

            var Extrahour = Convert.ToDouble(item.servicerequest.ExtraHours);
            var Extratime = item.servicerequest.ServiceHours + Extrahour;
            //  DateTime dts = Convert.ToDateTime(Extratime);
            DateTime end = Convert.ToDateTime(clocktime);
            DateTime watch = end.AddHours(Extratime);

            string Endtime = watch.ToString();

            string[] d = Endtime.Split(' ');
            string endt = d[1];
            string[] endda = endt.Split(':');

            string totaltime = endda[0] + ":" + endda[1];

            <tr class="table-data">
                <td>
                    <div>@Html.DisplayFor(modelitem => item.servicerequest.ServiceRequestId)</div>
                    <div><b> @Html.DisplayFor(modelitem => item.user.FirstName)  @Html.DisplayFor(modelitem => item.user.LastName)</b></div>
                </td>
                <td>
                    <div>
                        <img src="../image/calendar2.png">
                        <b>@Html.DisplayFor(modelitem => Date)</b>
                    </div>
                    <div>
                        <img src="../image/watch.png">
                        @Html.DisplayFor(modelitem => clocktime)- @Html.DisplayFor(modelitem => totaltime)
                    </div>

                </td>
                <td>
                    <div>
                        Rating
                    </div>
                    <div>
                        <span class="stars">
                            @Html.DisplayFor(modelitem => item.rating.Ratings)
                        </span>
                        @if (item.rating.Ratings > 0 && item.rating.Ratings <= 1)
                        {
                            <span>very Poor</span>
                        }
                        else if (item.rating.Ratings > 1 && item.rating.Ratings <= 2)
                        {
                            <span>Poor</span>
                        }
                        else if (item.rating.Ratings > 2 && item.rating.Ratings <= 3)
                        {
                            <span>Good</span>
                        }
                        else if (item.rating.Ratings > 3 && item.rating.Ratings <= 4)
                        {
                            <span>very Good</span>
                        }
                        else if (item.rating.Ratings > 4 && item.rating.Ratings <= 5)
                        {
                            <span>Excellent</span>
                        }


                    </div>

                </td>

            </tr>
            <hr style="width:100%" />
            <tr style="margin-bottom:20px;">
                <td>Comment</td>
                @Html.DisplayFor(modelitem => item.rating.Comments)
            </tr>
        }
    </tbody>
</table>




<script>
    $.fn.stars = function () {
        return $(this).each(function () {
            // Get the value
            var val = parseFloat($(this).html());
            //val = Math.round(val) ;
            // Make sure that the value is in 0 - 5 range, multiply to get width
            var size = Math.max(0, (Math.min(5, val))) * 16;
            // Create stars holder
            var $span = $('<span />').width(size);
            // Replace the numerical value with stars
            $(this).html($span);
        });
    }

    $(function () {
        $('span.stars').stars();
    });
</script>













<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
<script src="~/jquery-ajax-unobtrusive/jquery.unobtrusive-ajax.js"></script>


<script src="./js/jquery.min.js"></script>

<!-- Popper JS -->
<script src="./js/popper.min.js"></script>

<!-- Latest compiled JavaScript -->

<script src="https://code.jquery.com/jquery-3.5.1.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/1.11.3/js/dataTables.bootstrap5.min.js"></script>
<script src="https://cdn.datatables.net/responsive/2.2.9/js/dataTables.responsive.min.js"></script>
<script src="https://cdn.datatables.net/responsive/2.2.9/js/responsive.bootstrap5.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#example').DataTable({
            searching: false,
            info: false,
            dom: '<"float-left"B><"float-right"f>rt<"row"<"col-sm-4"l><"col-sm-4"i><"col-sm-4"p>>',
            "sPaginationType": "full_numbers",
            language: {
                paginate: {
                    first: '<img src="../image/first-page.png">',
                    next: '<i class="fas fa-angle-right"></i>',
                    previous: '<i class="fas fa-angle-left"></i>',
                    last: '<img src="../image/first-page.png" style="transform:rotate(180deg);">'
                },
            },
            responsive: {
                details: {
                    display: $.fn.dataTable.Responsive.display.modal({
                        header: function (row) {
                            var data = row.data();
                            return 'Details for ' + data[0] + ' ' + data[1];
                        }
                    }),
                    renderer: $.fn.dataTable.Responsive.renderer.tableAll({
                        tableClass: 'table'
                    })
                }
            }
        });
    });

</script>